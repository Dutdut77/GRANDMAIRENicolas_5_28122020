class Article{description;imageUrl;lenses;name;price;_id;constructor(t){for(const[e,n]of Object.entries(t))this[e]=n}afficheResume(){return`\n        <div class="card">\n            <div class="card__list-image" style="background-image: url('${this.imageUrl}');"></div>\n            <div class="card__list-content">\n                <div class="card__content-titre">\n                    <h3>${this.name}</h3>\n                </div>\n                <div class="card__content-desc">\n                ${this.description}  \n                </div>\n            </div>\n            <div class="card__list_bouton">\n                <div class="card__btn btn-grad-color" onclick="orinoco.components.composant_${this._id}.changePage()">Détail</div>\n            </div>\n        </div>\n             `}afficheDetails(){return`\n        <div class="produit">\n\n            <div class="produit-image" style="background-image: url('${this.imageUrl}');"></div>\n            \n            <div class="produit-content">\n                <div class="produit-titre">\n                    <h3>${this.name}</h3>\n                </div>\n                <div class="produit-prix">\n                     ${this.price/100} € \n                </div>  \n            </div>\n \n            <div class="produit-desc">\n                <article>\n                ${this.description}\n                </article>             \n            </div>     \n            \n            <select name="lenses" class="lenses">\n                <option value="">Choisissez une option :</option>\n                ${this.showVariants(this.lenses)}      \n            </select>\n            \n            <div class="produit-bouton">\n                <div class="produit-btn" onclick="orinoco.cart.add('${this._id}')">Ajouter au Panier</div>\n            </div>\n\n        </div>\n             `}showPanier(){return` <div class="show_panier">                \n      <div class="card_panier_img">\n              <div class="panier_img" style="background-image: url('${this.imageUrl}');"></div>\n      </div>              \n          \n       <div class="panier_content">\n          <div class="panier_content_titre">\n              <h4>${this.name}</h4>\n          </div>\n          <div class="panier_content_quantite">\n              <div class="quantite_titre">Quantité :</div>\n              <div class="quantite_box"> \n                  <div class="quantite_box_moins" onclick="orinoco.pageManager.page.moins('${this._id}')"></div>\n                  <div class="quantite_box_nombre">${this.qte}</div>\n                   <div class="quantite_box_plus" onclick="orinoco.pageManager.page.plus('${this._id}')"></div>\n              </div>    \n          </div>   \n      </div>\n  \n      <div class="panier_price">\n          <div class="corbeille" onclick="orinoco.pageManager.page.removeProduct('${this._id}')"></div>\n          <h4>${this.price/100*this.qte}€</h4> \n      </div> \n\n  </div>\n`}showVariants(t){let e="";for(let n=0,a=t.length;n<a;n++)e+=`<option value="${this.lenses[n]}"> ${this.lenses[n]}</option>`;return e}changePage(){orinoco.pageManager.changePage("produit_"+this._id,"Orinoco - Caméra "+this.name)}}class Cart{content=orinoco.dataManager.reloadCart();constructor(t){this.DOM=document.createElement("cart"),this.domTarget=t,this.render()}render(){if(this.content.length>0)return this.domTarget.hasChildNodes()||this.domTarget.appendChild(this.DOM),void(this.DOM.innerText=this.content.length);this.domTarget.hasChildNodes()&&this.domTarget.removeChild(this.DOM)}add(t){this.content.push(t),this.render(),orinoco.dataManager.saveCart(this.content)}updateFromPagePanier(t){this.content=t,this.render()}}class Home{constructor(t){this.getData(t)}async getData(t){let e="";const n=await orinoco.dataManager.getAllProducts();for(let t=0,a=n.length;t<a;t++)orinoco.components["composant_"+n[t]._id]=new Article(n[t]),e+=orinoco.components["composant_"+n[t]._id].afficheResume();t.innerHTML=e}}class Panier{constructor(t){this.getData(t)}async getData(t){const e=orinoco.dataManager.reloadCart();this.products=await this.cartArrayToCartObject(e),this.render(t)}render(t){let e,n="",a=0;for(const t of Object.values(this.products))e=new Article(t),n+=e.showPanier(),a+=t.qte*t.price/100;t.innerHTML=this.templatePanier(n,a)}async cartArrayToCartObject(t){const e={};for(let n=0,a=t.length;n<a;n++)void 0!==e[t[n]]?e[t[n]].qte++:e[t[n]]={...await orinoco.dataManager.getProduct(t[n]),qte:1};return e}templatePanier(t,e){return`\n        <div class="panier">\n\n            <div class="card_panier">\n                <div class="card_panier_titre">\n                    <h1> MON PANIER : </h1>\n                </div>           \n                     ${t}\n                <div class="card_panier_total">\n                    <h2> TOTAL : </h2>\n                    <div class="total_price">\n                        ${e} €\n                    </div>\n                </div>\n            </div>\n\n            <div class="contact">\n                    <h2> Vos coordonnées :</h2>               \n                    <div class="form__group">\n                        <label for="nom">Nom : </label>\n                        <input type="text" name="nom" id="nom">\n                    </div>\n                    <div class="form__group">\n                        <label for="prenom">Prénom: </label>\n                        <input type="text" name="prenom" id="prenom">\n                    </div>\n                    <div class="form__group">\n                        <label for="adresse">Adresse : </label>\n                        <input type="text" name="adresse" id="adresse">\n                    </div>\n                    <div class="form__group">\n                        <label for="ville">Ville :</label>\n                        <input type="text" name="ville" id="ville">\n                    </div>\n                    <div class="form__group">\n                        <label for="email">Email :</label>\n                        <input type="email" name="email" id="email">\n                    </div>\n\n                    <div class="form-btn">\n                        <div class="valid-btn" type="button" onclick="orinoco.pageManager.page.sendForm(event)">Valider votre commande</div>\n                    </div>         \n            </div>\n\n        </div>\n        \n        <div id="myModal" class="modal">\n        </div>\n   \n\n\n                    `}plus(t){this.products[t].qte++,this.updateCount()}moins(t){if(0===this.products[t].qte)return this.removeProduct(t);this.products[t].qte--,this.updateCount()}updateCount(){const t=[];for(const[e,n]of Object.entries(this.products))for(let a=n.qte;a>0;a--)t.push(e);orinoco.dataManager.saveCart(t),orinoco.pageManager.showPage("panier"),orinoco.cart.updateFromPagePanier(t)}removeProduct(t){delete this.products[t],this.updateCount()}async sendForm(t){t.stopPropagation(),t.preventDefault();const e=document.getElementById("nom").value,n=document.getElementById("prenom").value,a=document.getElementById("adresse").value,i=document.getElementById("ville").value,o=document.getElementById("email").value,s=[];for(const[t,e]of Object.entries(this.products))for(let t=e.qte;t>0;t--)s.push(e._id);const r={contact:{lastName:e,firstName:n,address:a,city:i,email:o},products:s},c=await orinoco.dataManager.postPanier(r);this.afficheModal(c)}async afficheModal(t){let e="",n=[],a=0;const i=t.products;for(let t=0,e=i.length;t<e;t++)n.push(i[t]._id);const o=await this.cartArrayToCartObject(n);for(const t of Object.values(o))a+=t.price*t.qte/100,e+=`<div class="recap">\n            <div class="recap-titre">${t.name}</div>\n            <div class="recap-qte">Quantité : ${t.qte}</div>\n            <div class="recap-price">${t.price/100*t.qte} €</div>                       \n            </div>`;const s=`\n        \x3c!-- Modal content --\x3e\n        <div class="modal-content">\n        <div class="modal-header">\n        <h2>Commande validée.</h2>\n        <p>N° ${t.orderId}</p>\n        \n        </div>\n\n        <div class="modal-body">\n<hr>\n            <div class="modal-section">\n            <div class="modal-section-titre">Récapitulatif :</div>\n            ${e}\n            <hr>\n            <div class="modal-total"> \n           \n            Montant total : ${a} €\n            </div>\n            </div>\n            <hr>\n            <div class="modal-section">\n            <div class="modal-section-titre">Adresse de Livraison :</div>            \n                <p>${t.contact.lastName} ${t.contact.firstName}</p>  \n                <p>${t.contact.address} </p>\n                <p>${t.contact.city} </p>\n            </div>\n            <hr>\n            <div class="modal-facture">\n            <p><h3>Orinoco</h3> vous remercie pour votre commande. Une facture vous sera envoyée sur votre addresse mail : <p class="mail">${t.contact.email}</p></p>           \n            </div>\n\n        </div>\n        <div class="modal-footer">\n\n        <div class="modal-btn" type="button" onclick="orinoco.dataManager.deletePanier()">Retour à l'accueil</div>\n\n        </div>\n        </div>\n\n        `;document.querySelector(".modal").innerHTML=s,this.optionModal()}optionModal(){document.getElementById("myModal").style.display="block"}}class Produit{constructor(t,e){this.getData(t,e)}async getData(t,e){const n=await orinoco.dataManager.getProduct(e),a=new Article(n);t.innerHTML=`\n          <select name="camera" class="camera" onchange="orinoco.pageManager.changePage('produit_' + this.value, 'Oricono - Camera '+this.options[this.selectedIndex].text)">        \n              ${await this.selectCamera(a.name)}\n          </select>\n          ${a.afficheDetails()}\n        `}async selectCamera(t){let e="";const n=await orinoco.dataManager.getAllProducts();for(let a=0,i=n.length;a<i;a++)e+=`<option ${t===n[a].name?"selected":""} value="${n[a]._id}">${n[a].name}</option>`;return e}}class DataManager{products=null;src;constructor(t){this.src=t}async getAllProducts(){const t=await fetch(this.src);return this.products=await t.json(),this.products}async getProduct(t){if(null!==this.products)return this.findInProducts(t);const e=await fetch(this.src+"/"+t);return await e.json()}async postPanier(t){const e={method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify(t)},n=await fetch("http://localhost:3000/api/cameras/order",e);return await n.json()}findInProducts(t){for(let e=0,n=this.products.length;e<n;e++)if(this.products[e]._id===t)return this.products[e];throw"can't find product"}saveCart(t){localStorage.setItem("cart",JSON.stringify(t))}reloadCart(){const t=localStorage.getItem("cart");return null===t?[]:JSON.parse(t)}deletePanier(){localStorage.clear(Cart),orinoco.cart.content=[],orinoco.cart.render(),orinoco.pageManager.changePage("")}}class PageManager{page;domTarget;constructor(t){this.domTarget=t,this.showPage(window.location.search.slice(1)),window.onpopstate=()=>this.showPage(window.location.search.slice(1))}showPage(t){return""===t?this.page=new Home(this.domTarget):"panier"===t?this.page=new Panier(this.domTarget):"produit"===t.slice(0,7)?this.page=new Produit(this.domTarget,t.slice(8)):void(this.page=new PageError)}changePage(t,e){document.getElementById("menuCheck").checked="none",document.title=e,history.pushState({},e,"?"+t),this.showPage(t)}}const orinoco={dataManager:new DataManager("http://localhost:3000/api/cameras"),components:{}};orinoco.cart=new Cart(document.querySelector(".shopping_cart")),orinoco.pageManager=new PageManager(document.querySelector("main"));